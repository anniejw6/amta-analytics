{
    "contents" : "## Examples:\n## library(xtable)\n## x <- tail(iris)\n## printbold(xtable(x)) #each = \"column\"\n## printbold(xtable(x), each = \"column\", max = c(F,NA,NA,T,NA))\n## printbold(xtable(x), each = \"row\", max = FALSE)\n## printbold(xtable(x), x >= 6.5, type = \"html\")\n\nprintbold <-\n  function(x, which = NULL, each = c(\"column\", \"row\"), max = TRUE,\n           NA.string = \"\", type = c(\"latex\", \"html\"),\n           sanitize.text.function = force,\n           sanitize.rownames.function = NULL,\n           sanitize.colnames.function = NULL, ...)\n  {\n    stopifnot(inherits(x, \"xtable\"))\n    each <- match.arg(each)\n    type <- match.arg(type)\n    digits <- rep(digits(x), length = ncol(x)+1)\n    if (!is.null(which)) {\n      stopifnot(nrow(which) == nrow(x))\n      stopifnot(ncol(which) == ncol(x))\n      boldmatrix <- which\n    } else {\n      boldmatrix <- matrix(FALSE, ncol = ncol(x), nrow = nrow(x))\n      ## round values before calculating max/min to avoid trivial diffs\n      for (i in 1:ncol(x)) {\n        if (!is.numeric(x[,i])) next\n        x[,i] <- round(x[,i], digits = digits[i+1])\n      }\n      if (each == \"column\") {\n        max <- rep(max, length = ncol(x))\n        for (i in 1:ncol(x)) {\n          xi <- x[,i]\n          if (!is.numeric(xi)) next\n          if (is.na(max[i])) next\n          imax <- max(xi, na.rm = TRUE)\n          if (!max[i])\n            imax <- min(xi, na.rm = TRUE)\n          boldmatrix[xi == imax, i] <- TRUE\n        }\n      } else if (each == \"row\") {\n        max <- rep(max, length = nrow(x))\n        for (i in 1:nrow(x)) {\n          xi <- x[i,]\n          ok <- sapply(xi, is.numeric)\n          if (!any(ok)) next\n          if (is.na(max[i])) next\n          imax <- max(unlist(xi[ok]), na.rm = TRUE)\n          if (!max[i])\n            imax <- min(unlist(xi[ok]), na.rm = TRUE)\n          whichmax <- sapply(xi, identical, imax)\n          boldmatrix[i, whichmax] <- TRUE\n        }\n      }\n    }\n    ## need to convert to character\n    ## only support per-column formats, not cell formats\n    display <- rep(display(x), length = ncol(x)+1)\n    for (i in 1:ncol(x)) {\n      if (!is.numeric(x[,i])) next\n      ina <- is.na(x[,i])\n      x[,i] <- formatC(x[,i], digits = digits[i+1],\n                       format = display[i+1])\n      x[ina, i] <- NA.string\n      display(x)[i+1] <- \"s\"\n      ## embolden\n      yes <- boldmatrix[,i]\n      if (type == \"latex\") {\n        x[yes,i] <- paste(\"\\\\textbf{\", x[yes,i], \"}\", sep = \"\")\n      } else {\n        x[yes,i] <- paste(\"<strong>\", x[yes,i], \"</strong>\", sep = \"\")\n      }\n    }\n    print(x, ..., type = type, NA.string = NA.string,\n          sanitize.text.function = sanitize.text.function,\n          sanitize.rownames.function = sanitize.rownames.function,\n          sanitize.colnames.function = sanitize.colnames.function)\n  }",
    "created" : 1412688037486.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "245833462",
    "id" : "8E6AC42A",
    "lastKnownWriteTime" : 8315177835134542706,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}